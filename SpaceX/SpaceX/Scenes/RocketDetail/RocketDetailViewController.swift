//
//  RocketDetailViewController.swift
//  SpaceX
//
//  Created by Canberk Bibican on 17.05.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol RocketDetailDisplayLogic: AnyObject {
    func displayGetRocket(viewModel: RocketDetail.GetRocketDetail.ViewModel)
    func displayRocketError(error: Error)
    func passingData(data: Rockets.GetRocketList.RocketDetailPassData?)
}

class RocketDetailViewController: BaseViewController {
    var interactor: RocketDetailBusinessLogic?
    var router: (NSObjectProtocol & RocketDetailRoutingLogic & RocketDetailDataPassing)?

    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    // MARK: Setup

    private func setup() {
        let viewController = self
        let interactor = RocketDetailInteractor()
        let presenter = RocketDetailPresenter()
        let router = RocketDetailRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    // MARK: Routing

    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }

    // MARK: View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
        getPassingData()
    }

    func getRocketDetail(rocketID: String) {
        let request = RocketDetail.GetRocketDetail.Request(rocketId: rocketID)
        interactor?.getRocket(request: request)
    }

    func getPassingData() {
        interactor?.getPassingData()
    }

}

extension RocketDetailViewController: RocketDetailDisplayLogic {
    func passingData(data: Rockets.GetRocketList.RocketDetailPassData?) {
        if data != nil {
            getRocketDetail(rocketID: data!.rocketID)
        }
    }

    func displayGetRocket(viewModel: RocketDetail.GetRocketDetail.ViewModel) {
        print(viewModel.displayedRocket)
    }

    func displayRocketError(error: Error) {
        print(error)
    }
}
